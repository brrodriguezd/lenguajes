Terminals unused in grammar

    THEN


Grammar

    0 $accept: program $end

    1 program: block

    2 block: stmt block
    3      | ε

    4 stmt: WHILE condicion LB block RB
    5     | IF condicion LB block RB
    6     | IF condicion LB block RB ELSE LB block RB
    7     | expr SEMICOLON
    8     | declaracion SEMICOLON
    9     | reassign SEMICOLON
   10     | print SEMICOLON

   11 expr: CADENA
   12     | IDENTIFIER
   13     | FLOAT
   14     | INT
   15     | ALFABETO
   16     | LP expr RP
   17     | LS array RS
   18     | expr LS expr RS
   19     | expr PLUS expr
   20     | expr MINUS expr
   21     | expr MUL expr
   22     | expr DIV expr
   23     | expr MOD expr
   24     | expr SIZE
   25     | expr CAT

   26 condicion: LP condicion RP
   27          | expr EQ expr
   28          | expr NE expr
   29          | expr LE expr
   30          | expr GE expr
   31          | expr LT expr
   32          | expr GT expr

   33 array: array COMMA expr
   34      | expr

   35 reassign: IDENTIFIER ASSIGN expr
   36         | expr LS expr RS ASSIGN expr

   37 declaracion: TYPE_INT IDENTIFIER ASSIGN expr
   38            | TYPE_FLOAT IDENTIFIER ASSIGN expr
   39            | TYPE_CADENA IDENTIFIER ASSIGN expr
   40            | TYPE_INT MUL IDENTIFIER ASSIGN expr
   41            | TYPE_FLOAT MUL IDENTIFIER ASSIGN expr
   42            | TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr RB
   43            | TYPE_FLOAT MUL MUL IDENTIFIER ASSIGN expr
   44            | TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB
   45            | ALFABETO ASSIGN expr

   46 print: PRINT LP expr RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <sval> (258) 12 35 37 38 39 40 41 42 43 44
    CADENA <sval> (259) 11
    INT <ival> (260) 14
    FLOAT <fval> (261) 13
    ALFABETO <cval> (262) 15 45
    ASSIGN (263) 35 36 37 38 39 40 41 42 43 44 45
    TYPE_INT (264) 37 40
    TYPE_FLOAT (265) 38 41 43
    TYPE_CADENA (266) 39
    TYPE_MODELO (267) 44
    TYPE_CAD_MULT (268) 42
    WHILE (269) 4
    IF (270) 5 6
    ELSE (271) 6
    THEN (272)
    LB (273) 4 5 6 42 44
    RB (274) 4 5 6 42 44
    LP (275) 16 26 46
    RP (276) 16 26 46
    LS (277) 17 18 36
    RS (278) 17 18 36
    EQ (279) 27
    NE (280) 28
    LE (281) 29
    GE (282) 30
    LT (283) 31
    GT (284) 32
    PLUS (285) 19
    MINUS (286) 20
    MUL (287) 21 40 41 43
    DIV (288) 22
    MOD (289) 23
    SIZE (290) 24
    CAT (291) 25
    COMMA (292) 33 42 44
    SEMICOLON (293) 7 8 9 10
    PRINT (294) 46


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <ast> (41)
        on left: 1
        on right: 0
    block <ast> (42)
        on left: 2 3
        on right: 1 2 4 5 6
    stmt <ast> (43)
        on left: 4 5 6 7 8 9 10
        on right: 2
    expr <ast> (44)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 7 16 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    condicion <ast> (45)
        on left: 26 27 28 29 30 31 32
        on right: 4 5 6 26
    array <ast> (46)
        on left: 33 34
        on right: 17 33
    reassign <ast> (47)
        on left: 35 36
        on right: 9
    declaracion <ast> (48)
        on left: 37 38 39 40 41 42 43 44 45
        on right: 8
    print <ast> (49)
        on left: 46
        on right: 10


State 0

    0 $accept: • program $end

    IDENTIFIER     shift, and go to state 1
    CADENA         shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    ALFABETO       shift, and go to state 5
    TYPE_INT       shift, and go to state 6
    TYPE_FLOAT     shift, and go to state 7
    TYPE_CADENA    shift, and go to state 8
    TYPE_MODELO    shift, and go to state 9
    TYPE_CAD_MULT  shift, and go to state 10
    WHILE          shift, and go to state 11
    IF             shift, and go to state 12
    LP             shift, and go to state 13
    LS             shift, and go to state 14
    PRINT          shift, and go to state 15

    $default  reduce using rule 3 (block)

    program      go to state 16
    block        go to state 17
    stmt         go to state 18
    expr         go to state 19
    reassign     go to state 20
    declaracion  go to state 21
    print        go to state 22


State 1

   12 expr: IDENTIFIER •
   35 reassign: IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 12 (expr)


State 2

   11 expr: CADENA •

    $default  reduce using rule 11 (expr)


State 3

   14 expr: INT •

    $default  reduce using rule 14 (expr)


State 4

   13 expr: FLOAT •

    $default  reduce using rule 13 (expr)


State 5

   15 expr: ALFABETO •
   45 declaracion: ALFABETO • ASSIGN expr

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 15 (expr)


State 6

   37 declaracion: TYPE_INT • IDENTIFIER ASSIGN expr
   40            | TYPE_INT • MUL IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 25
    MUL         shift, and go to state 26


State 7

   38 declaracion: TYPE_FLOAT • IDENTIFIER ASSIGN expr
   41            | TYPE_FLOAT • MUL IDENTIFIER ASSIGN expr
   43            | TYPE_FLOAT • MUL MUL IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 27
    MUL         shift, and go to state 28


State 8

   39 declaracion: TYPE_CADENA • IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 29


State 9

   44 declaracion: TYPE_MODELO • IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 30


State 10

   42 declaracion: TYPE_CAD_MULT • IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 31


State 11

    4 stmt: WHILE • condicion LB block RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 34
    LS          shift, and go to state 14

    expr       go to state 35
    condicion  go to state 36


State 12

    5 stmt: IF • condicion LB block RB
    6     | IF • condicion LB block RB ELSE LB block RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 34
    LS          shift, and go to state 14

    expr       go to state 35
    condicion  go to state 37


State 13

   16 expr: LP • expr RP

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 38


State 14

   17 expr: LS • array RS

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr   go to state 39
    array  go to state 40


State 15

   46 print: PRINT • LP expr RP

    LP  shift, and go to state 41


State 16

    0 $accept: program • $end

    $end  shift, and go to state 42


State 17

    1 program: block •

    $default  reduce using rule 1 (program)


State 18

    2 block: stmt • block

    IDENTIFIER     shift, and go to state 1
    CADENA         shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    ALFABETO       shift, and go to state 5
    TYPE_INT       shift, and go to state 6
    TYPE_FLOAT     shift, and go to state 7
    TYPE_CADENA    shift, and go to state 8
    TYPE_MODELO    shift, and go to state 9
    TYPE_CAD_MULT  shift, and go to state 10
    WHILE          shift, and go to state 11
    IF             shift, and go to state 12
    LP             shift, and go to state 13
    LS             shift, and go to state 14
    PRINT          shift, and go to state 15

    $default  reduce using rule 3 (block)

    block        go to state 43
    stmt         go to state 18
    expr         go to state 19
    reassign     go to state 20
    declaracion  go to state 21
    print        go to state 22


State 19

    7 stmt: expr • SEMICOLON
   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   36 reassign: expr • LS expr RS ASSIGN expr

    LS         shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    MUL        shift, and go to state 47
    DIV        shift, and go to state 48
    MOD        shift, and go to state 49
    SIZE       shift, and go to state 50
    CAT        shift, and go to state 51
    SEMICOLON  shift, and go to state 52


State 20

    9 stmt: reassign • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 21

    8 stmt: declaracion • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 22

   10 stmt: print • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 23

   35 reassign: IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 56


State 24

   45 declaracion: ALFABETO ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 57


State 25

   37 declaracion: TYPE_INT IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 58


State 26

   40 declaracion: TYPE_INT MUL • IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 59


State 27

   38 declaracion: TYPE_FLOAT IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 60


State 28

   41 declaracion: TYPE_FLOAT MUL • IDENTIFIER ASSIGN expr
   43            | TYPE_FLOAT MUL • MUL IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 61
    MUL         shift, and go to state 62


State 29

   39 declaracion: TYPE_CADENA IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 63


State 30

   44 declaracion: TYPE_MODELO IDENTIFIER • ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    ASSIGN  shift, and go to state 64


State 31

   42 declaracion: TYPE_CAD_MULT IDENTIFIER • ASSIGN LB expr COMMA expr COMMA expr RB

    ASSIGN  shift, and go to state 65


State 32

   12 expr: IDENTIFIER •

    $default  reduce using rule 12 (expr)


State 33

   15 expr: ALFABETO •

    $default  reduce using rule 15 (expr)


State 34

   16 expr: LP • expr RP
   26 condicion: LP • condicion RP

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 34
    LS          shift, and go to state 14

    expr       go to state 66
    condicion  go to state 67


State 35

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   27 condicion: expr • EQ expr
   28          | expr • NE expr
   29          | expr • LE expr
   30          | expr • GE expr
   31          | expr • LT expr
   32          | expr • GT expr

    LS     shift, and go to state 68
    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    LE     shift, and go to state 71
    GE     shift, and go to state 72
    LT     shift, and go to state 73
    GT     shift, and go to state 74
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 36

    4 stmt: WHILE condicion • LB block RB

    LB  shift, and go to state 75


State 37

    5 stmt: IF condicion • LB block RB
    6     | IF condicion • LB block RB ELSE LB block RB

    LB  shift, and go to state 76


State 38

   16 expr: LP expr • RP
   18     | expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    RP     shift, and go to state 77
    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 39

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   34 array: expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 34 (array)


State 40

   17 expr: LS array • RS
   33 array: array • COMMA expr

    RS     shift, and go to state 78
    COMMA  shift, and go to state 79


State 41

   46 print: PRINT LP • expr RP

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 80


State 42

    0 $accept: program $end •

    $default  accept


State 43

    2 block: stmt block •

    $default  reduce using rule 2 (block)


State 44

   18 expr: expr LS • expr RS
   36 reassign: expr LS • expr RS ASSIGN expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 81


State 45

   19 expr: expr PLUS • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 82


State 46

   20 expr: expr MINUS • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 83


State 47

   21 expr: expr MUL • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 84


State 48

   22 expr: expr DIV • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 85


State 49

   23 expr: expr MOD • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 86


State 50

   24 expr: expr SIZE •

    $default  reduce using rule 24 (expr)


State 51

   25 expr: expr CAT •

    $default  reduce using rule 25 (expr)


State 52

    7 stmt: expr SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 53

    9 stmt: reassign SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 54

    8 stmt: declaracion SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 55

   10 stmt: print SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 56

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   35 reassign: IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 35 (reassign)


State 57

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   45 declaracion: ALFABETO ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 45 (declaracion)


State 58

   37 declaracion: TYPE_INT IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 87


State 59

   40 declaracion: TYPE_INT MUL IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 88


State 60

   38 declaracion: TYPE_FLOAT IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 89


State 61

   41 declaracion: TYPE_FLOAT MUL IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 90


State 62

   43 declaracion: TYPE_FLOAT MUL MUL • IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 91


State 63

   39 declaracion: TYPE_CADENA IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 92


State 64

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN • LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    LB  shift, and go to state 93


State 65

   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN • LB expr COMMA expr COMMA expr RB

    LB  shift, and go to state 94


State 66

   16 expr: LP expr • RP
   18     | expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   27 condicion: expr • EQ expr
   28          | expr • NE expr
   29          | expr • LE expr
   30          | expr • GE expr
   31          | expr • LT expr
   32          | expr • GT expr

    RP     shift, and go to state 77
    LS     shift, and go to state 68
    EQ     shift, and go to state 69
    NE     shift, and go to state 70
    LE     shift, and go to state 71
    GE     shift, and go to state 72
    LT     shift, and go to state 73
    GT     shift, and go to state 74
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 67

   26 condicion: LP condicion • RP

    RP  shift, and go to state 95


State 68

   18 expr: expr LS • expr RS

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 96


State 69

   27 condicion: expr EQ • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 97


State 70

   28 condicion: expr NE • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 98


State 71

   29 condicion: expr LE • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 99


State 72

   30 condicion: expr GE • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 100


State 73

   31 condicion: expr LT • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 101


State 74

   32 condicion: expr GT • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 102


State 75

    4 stmt: WHILE condicion LB • block RB

    IDENTIFIER     shift, and go to state 1
    CADENA         shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    ALFABETO       shift, and go to state 5
    TYPE_INT       shift, and go to state 6
    TYPE_FLOAT     shift, and go to state 7
    TYPE_CADENA    shift, and go to state 8
    TYPE_MODELO    shift, and go to state 9
    TYPE_CAD_MULT  shift, and go to state 10
    WHILE          shift, and go to state 11
    IF             shift, and go to state 12
    LP             shift, and go to state 13
    LS             shift, and go to state 14
    PRINT          shift, and go to state 15

    $default  reduce using rule 3 (block)

    block        go to state 103
    stmt         go to state 18
    expr         go to state 19
    reassign     go to state 20
    declaracion  go to state 21
    print        go to state 22


State 76

    5 stmt: IF condicion LB • block RB
    6     | IF condicion LB • block RB ELSE LB block RB

    IDENTIFIER     shift, and go to state 1
    CADENA         shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    ALFABETO       shift, and go to state 5
    TYPE_INT       shift, and go to state 6
    TYPE_FLOAT     shift, and go to state 7
    TYPE_CADENA    shift, and go to state 8
    TYPE_MODELO    shift, and go to state 9
    TYPE_CAD_MULT  shift, and go to state 10
    WHILE          shift, and go to state 11
    IF             shift, and go to state 12
    LP             shift, and go to state 13
    LS             shift, and go to state 14
    PRINT          shift, and go to state 15

    $default  reduce using rule 3 (block)

    block        go to state 104
    stmt         go to state 18
    expr         go to state 19
    reassign     go to state 20
    declaracion  go to state 21
    print        go to state 22


State 77

   16 expr: LP expr RP •

    $default  reduce using rule 16 (expr)


State 78

   17 expr: LS array RS •

    $default  reduce using rule 17 (expr)


State 79

   33 array: array COMMA • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 105


State 80

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   46 print: PRINT LP expr • RP

    RP     shift, and go to state 106
    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 81

   18 expr: expr • LS expr RS
   18     | expr LS expr • RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   36 reassign: expr LS expr • RS ASSIGN expr

    LS     shift, and go to state 68
    RS     shift, and go to state 107
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 82

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   19     | expr PLUS expr •
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 19 (expr)


State 83

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   20     | expr MINUS expr •
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 20 (expr)


State 84

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   21     | expr MUL expr •
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    LS  shift, and go to state 68

    $default  reduce using rule 21 (expr)


State 85

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   22     | expr DIV expr •
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    LS  shift, and go to state 68

    $default  reduce using rule 22 (expr)


State 86

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   23     | expr MOD expr •
   24     | expr • SIZE
   25     | expr • CAT

    LS  shift, and go to state 68

    $default  reduce using rule 23 (expr)


State 87

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   37 declaracion: TYPE_INT IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 37 (declaracion)


State 88

   40 declaracion: TYPE_INT MUL IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 108


State 89

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   38 declaracion: TYPE_FLOAT IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 38 (declaracion)


State 90

   41 declaracion: TYPE_FLOAT MUL IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 109


State 91

   43 declaracion: TYPE_FLOAT MUL MUL IDENTIFIER • ASSIGN expr

    ASSIGN  shift, and go to state 110


State 92

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   39 declaracion: TYPE_CADENA IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 39 (declaracion)


State 93

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB • expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 111


State 94

   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB • expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 112


State 95

   26 condicion: LP condicion RP •

    $default  reduce using rule 26 (condicion)


State 96

   18 expr: expr • LS expr RS
   18     | expr LS expr • RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT

    LS     shift, and go to state 68
    RS     shift, and go to state 113
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 97

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   27 condicion: expr EQ expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 27 (condicion)


State 98

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   28 condicion: expr NE expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 28 (condicion)


State 99

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   29 condicion: expr LE expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 29 (condicion)


State 100

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   30 condicion: expr GE expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 30 (condicion)


State 101

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   31 condicion: expr LT expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 31 (condicion)


State 102

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   32 condicion: expr GT expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 32 (condicion)


State 103

    4 stmt: WHILE condicion LB block • RB

    RB  shift, and go to state 114


State 104

    5 stmt: IF condicion LB block • RB
    6     | IF condicion LB block • RB ELSE LB block RB

    RB  shift, and go to state 115


State 105

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   33 array: array COMMA expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 33 (array)


State 106

   46 print: PRINT LP expr RP •

    $default  reduce using rule 46 (print)


State 107

   18 expr: expr LS expr RS •
   36 reassign: expr LS expr RS • ASSIGN expr

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 18 (expr)


State 108

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   40 declaracion: TYPE_INT MUL IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 40 (declaracion)


State 109

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   41 declaracion: TYPE_FLOAT MUL IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 41 (declaracion)


State 110

   43 declaracion: TYPE_FLOAT MUL MUL IDENTIFIER ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 117


State 111

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr • COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 118


State 112

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr • COMMA expr COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 119


State 113

   18 expr: expr LS expr RS •

    $default  reduce using rule 18 (expr)


State 114

    4 stmt: WHILE condicion LB block RB •

    $default  reduce using rule 4 (stmt)


State 115

    5 stmt: IF condicion LB block RB •
    6     | IF condicion LB block RB • ELSE LB block RB

    ELSE  shift, and go to state 120

    $default  reduce using rule 5 (stmt)


State 116

   36 reassign: expr LS expr RS ASSIGN • expr

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 121


State 117

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   43 declaracion: TYPE_FLOAT MUL MUL IDENTIFIER ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 43 (declaracion)


State 118

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA • expr COMMA expr COMMA expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 122


State 119

   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA • expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 123


State 120

    6 stmt: IF condicion LB block RB ELSE • LB block RB

    LB  shift, and go to state 124


State 121

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   36 reassign: expr LS expr RS ASSIGN expr •

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51

    $default  reduce using rule 36 (reassign)


State 122

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr • COMMA expr COMMA expr COMMA expr COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 125


State 123

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA expr • COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 126


State 124

    6 stmt: IF condicion LB block RB ELSE LB • block RB

    IDENTIFIER     shift, and go to state 1
    CADENA         shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    ALFABETO       shift, and go to state 5
    TYPE_INT       shift, and go to state 6
    TYPE_FLOAT     shift, and go to state 7
    TYPE_CADENA    shift, and go to state 8
    TYPE_MODELO    shift, and go to state 9
    TYPE_CAD_MULT  shift, and go to state 10
    WHILE          shift, and go to state 11
    IF             shift, and go to state 12
    LP             shift, and go to state 13
    LS             shift, and go to state 14
    PRINT          shift, and go to state 15

    $default  reduce using rule 3 (block)

    block        go to state 127
    stmt         go to state 18
    expr         go to state 19
    reassign     go to state 20
    declaracion  go to state 21
    print        go to state 22


State 125

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA • expr COMMA expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 128


State 126

   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA expr COMMA • expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 129


State 127

    6 stmt: IF condicion LB block RB ELSE LB block • RB

    RB  shift, and go to state 130


State 128

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr • COMMA expr COMMA expr COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 131


State 129

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr • RB

    RB     shift, and go to state 132
    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 130

    6 stmt: IF condicion LB block RB ELSE LB block RB •

    $default  reduce using rule 6 (stmt)


State 131

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA • expr COMMA expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 133


State 132

   42 declaracion: TYPE_CAD_MULT IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr RB •

    $default  reduce using rule 42 (declaracion)


State 133

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr • COMMA expr COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 134


State 134

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA • expr COMMA expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 135


State 135

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr • COMMA expr RB

    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51
    COMMA  shift, and go to state 136


State 136

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA • expr RB

    IDENTIFIER  shift, and go to state 32
    CADENA      shift, and go to state 2
    INT         shift, and go to state 3
    FLOAT       shift, and go to state 4
    ALFABETO    shift, and go to state 33
    LP          shift, and go to state 13
    LS          shift, and go to state 14

    expr  go to state 137


State 137

   18 expr: expr • LS expr RS
   19     | expr • PLUS expr
   20     | expr • MINUS expr
   21     | expr • MUL expr
   22     | expr • DIV expr
   23     | expr • MOD expr
   24     | expr • SIZE
   25     | expr • CAT
   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr • RB

    RB     shift, and go to state 138
    LS     shift, and go to state 68
    PLUS   shift, and go to state 45
    MINUS  shift, and go to state 46
    MUL    shift, and go to state 47
    DIV    shift, and go to state 48
    MOD    shift, and go to state 49
    SIZE   shift, and go to state 50
    CAT    shift, and go to state 51


State 138

   44 declaracion: TYPE_MODELO IDENTIFIER ASSIGN LB expr COMMA expr COMMA expr COMMA expr COMMA expr COMMA expr RB •

    $default  reduce using rule 44 (declaracion)
